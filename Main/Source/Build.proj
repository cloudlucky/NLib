<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Version -->
  <PropertyGroup>
    <AssemblyMajorVersion>1</AssemblyMajorVersion>
    <AssemblyMinorVersion>0</AssemblyMinorVersion>
    <AssemblyBuildNumber>0</AssemblyBuildNumber>
    <AssemblyRevision>0</AssemblyRevision>
    <Version>$(AssemblyMajorVersion).$(AssemblyMinorVersion).$(AssemblyBuildNumber).$(AssemblyRevision)</Version>
  </PropertyGroup>

  <PropertyGroup>
    <RootFolder>$(MSBuildProjectDirectory)\..</RootFolder>
    <SourceFolder>$(MSBuildProjectDirectory)</SourceFolder>
    <TestsFolder>$(SourceFolder)\Tests</TestsFolder>
    <LibFolder>$(RootFolder)\Lib</LibFolder>
    <PackagesFolder>$(SourceFolder)\packages</PackagesFolder>
    <ToolsFolder>$(RootFolder)\Tools</ToolsFolder>
  </PropertyGroup>

  <PropertyGroup>
    <ProjectPrefixName>NLib</ProjectPrefixName>
  </PropertyGroup>

  <!-- Output Files -->
  <PropertyGroup>
    <AllSolutionOutputInclude>$(SourceFolder)\**\*.dll;$(SourceFolder)\**\*.xml;$(SourceFolder)\**\*.pdb</AllSolutionOutputInclude>
    <AllSolutionSpecificOutputInclude>$(SourceFolder)\**\$(ProjectPrefixName)*.dll;$(SourceFolder)\**\$(ProjectPrefixName)*.xml;$(SourceFolder)\**\$(ProjectPrefixName)*.pdb</AllSolutionSpecificOutputInclude>
    <AllSolutionOutputExclude>$(SourceFolder)\**\obj\**\*;$(SourceFolder)\**\*.Tests\**\*;$(PackagesFolder)\**\*.*;$(SourceFolder)\*.*</AllSolutionOutputExclude>
    <AllSolutionProjects>$(SourceFolder)\**\*.csproj</AllSolutionProjects>
    <AllSolutionTestProjects>$(TestsFolder)\**\*.csproj</AllSolutionTestProjects>
  </PropertyGroup>

  <!-- Output -->
  <PropertyGroup>
    <OutputFolder>$(RootFolder)\Output</OutputFolder>
  </PropertyGroup>

  <!-- NuGet -->
  <PropertyGroup>
    <NuGetTool>$(SourceFolder)\.nuget\NuGet.exe</NuGetTool>
    <NuGetApiKey></NuGetApiKey>
  </PropertyGroup>

  <!-- Tests -->
  <PropertyGroup>
    <xUnitFolder>$(PackagesFolder)\xunit.1.9.1\lib\net20</xUnitFolder>
  </PropertyGroup>

  <!-- StyleCop -->
  <PropertyGroup>
    <StyleCopFolder>$(PackagesFolder)\StyleCop.MSBuild.4.7.44.1\tools</StyleCopFolder>
    <StyleCopOverrideSettingsFile>$(SourceFolder)\Settings.StyleCop</StyleCopOverrideSettingsFile>
    <StyleCopOutputFolder>$(OutputFolder)\StyleCop</StyleCopOutputFolder>
    <StyleCopXslt>$(ToolsFolder)\StyleCop\StyleCop.xslt</StyleCopXslt>
    <StyleCopMaxViolationCount>100</StyleCopMaxViolationCount>
    <StyleCopResultXml>$(StyleCopOutputFolder)\StyleCopViolations.xml</StyleCopResultXml>
    
    <StyleCopCacheResults>false</StyleCopCacheResults>
    <StyleCopForceFullAnalysis>false</StyleCopForceFullAnalysis>
    <DefineConstants></DefineConstants>
    <StyleCopTreatErrorsAsWarnings>true</StyleCopTreatErrorsAsWarnings>
    <StyleCopResultHtml>$(StyleCopOutputFolder)\stylecop-result.html</StyleCopResultHtml>
  </PropertyGroup>

  <ItemGroup>
    <StyleCopFiles Include="$(SourceFolder)\**\*.cs" Exclude="$(PackagesFolder)\**\*.cs;$(TestsFolder)\**\*.cs"/>
  </ItemGroup>

  <!-- FxCop -->
  <PropertyGroup>
    <FxCopFolder>$(ToolsFolder)\Microsoft Fxcop 10.0</FxCopFolder>
    <FxCopCustomDictionary>$(SourceFolder)\CustomDictionary.xml</FxCopCustomDictionary>
    <FxCopOutputFolder>$(OutputFolder)\FxCop</FxCopOutputFolder>
    <FxCopResultXml>$(FxCopOutputFolder)\fxcop-result.xml</FxCopResultXml>
    <FxCopResultHtml>$(FxCopOutputFolder)\fxcop-result.html</FxCopResultHtml>
    <FxCopXsl>$(FxCopFolder)\Xml\FxCopReport.xsl</FxCopXsl>
  </PropertyGroup>

  <!-- Nuget.targets -->
  <PropertyGroup>
    <SolutionDir>$(SourceFolder)\</SolutionDir>
    <ProjectDir>$(SolutionDir)</ProjectDir>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>

  <!-- Packages -->
  <PropertyGroup>
    <PackageFolder>$(OutputFolder)\Packages</PackageFolder>
    <PackageBinariesFolder>$(PackageFolder)\Binaries</PackageBinariesFolder>
    <PackageBinariesZip>$(OutputFolder)\$(ProjectPrefixName).zip</PackageBinariesZip>

    <PackageNugetFolder>$(PackageFolder)\NuGet</PackageNugetFolder>
    <BinariesWithDocFolder>$(PackageFolder)\BinariesDoc</BinariesWithDocFolder>
    <ReleaseSourceFolder>$(PackageFolder)\Sources</ReleaseSourceFolder>

    <SHFBproj>$(SourceFolder)\$(ProjectPrefixName).Doc.shfbproj</SHFBproj>
    <HtmlHelp1Output>$(PackageFolder)\BinariesWithDoc</HtmlHelp1Output>
    <HtmlDocumentation>$(PackageFolder)\HtmlDocumentation</HtmlDocumentation>
    <HtmlDocumentationZipFile>$(OutputFolder)\$(ProjectPrefixName).HtmlDocumentation.zip</HtmlDocumentationZipFile>
    <BinariesWithDocZipFile>$(OutputFolder)\$(ProjectPrefixName)WithDoc.zip</BinariesWithDocZipFile>
    <SourcesZipFile>$(OutputFolder)\$(ProjectPrefixName)Sources.zip</SourcesZipFile>
  </PropertyGroup>

  <UsingTask AssemblyFile="$(ToolsFolder)\MsBuildExtensionPack\4.0\MSBuild.ExtensionPack.dll" TaskName="MSBuild.ExtensionPack.Framework.AssemblyInfo"/>
  <UsingTask AssemblyFile="$(ToolsFolder)\MsBuildExtensionPack\4.0\MSBuild.ExtensionPack.dll" TaskName="MSBuild.ExtensionPack.Compression.DNZip"/>
  <UsingTask AssemblyFile="$(ToolsFolder)\MsBuildExtensionPack\4.0\MSBuild.ExtensionPack.dll" TaskName="MSBuild.ExtensionPack.Xml.XmlFile"/>
  <UsingTask AssemblyFile="$(ToolsFolder)\MsBuildExtensionPack\4.0\MSBuild.ExtensionPack.dll" TaskName="MSBuild.ExtensionPack.Xml.XmlTask"/>
  
  <Import Project="$(SourceFolder)\.nuget\nuget.targets" />
  <UsingTask AssemblyFile="$(xUnitFolder)\xunit.runner.msbuild.dll" TaskName="Xunit.Runner.MSBuild.xunit" />
  <UsingTask AssemblyFile="$(StyleCopFolder)\StyleCop.dll" TaskName="StyleCopTask"/>

  <!-- Solutions to build-->
  <ItemGroup>
    <SolutionToBuild Include="$(SourceFolder)\$(ProjectPrefixName).sln" />
  </ItemGroup>

  <Target Name="All">
    <CallTarget Targets="Clean"/>
    <CallTarget Targets="Build"/>
    <CallTarget Targets="PrepareOutput"/>
    <CallTarget Targets="Tests"/>
    <CallTarget Targets="StyleCop"/>
    <CallTarget Targets="FxCop"/>
    <CallTarget Targets="Package"/>
  </Target>

  <Target Name="Clean">
    <ItemGroup>
      <OutputFolderFiles Include="$(OutputFolder)\**\*"/>
      <CleanProjectOutputFiles Include="$(SourceFolder)\**\bin\**\*.*;$(SourceFolder)\**\obj\**\*.*" Exclude="$(PackagesFolder)\**\*.*"/>
    </ItemGroup>
    <MSBuild Projects="@(SolutionToBuild)" ContinueOnError="false" Targets="Clean" />

    <Delete Files="@(OutputFolderFiles)" ContinueOnError="True"/>
    <RemoveDir Directories="$(OutputFolder)" ContinueOnError="True"/>

    <Delete Files="@(CleanProjectOutputFiles)" ContinueOnError="True" />
  </Target>

  <Target Name="SetVersion" BeforeTargets="Build">
    <Message Text="Version is $(Version)"/>

    <ItemGroup>
      <AssemblyInfoFiles Include="$(SourceFolder)\**\AssemblyInfo.*" Exclude="$(PackagesFolder)\**\*.*"/>
    </ItemGroup>
    
    <MSBuild.ExtensionPack.Framework.AssemblyInfo AssemblyInfoFiles="@(AssemblyInfoFiles)"
                                                  AssemblyMajorVersion="$(AssemblyMajorVersion)"
                                                  AssemblyMinorVersion="$(AssemblyMinorVersion)"
                                                  AssemblyBuildNumber="$(AssemblyBuildNumber)"
                                                  AssemblyRevision="$(AssemblyRevision)"
                                                  AssemblyFileMajorVersion="$(AssemblyMajorVersion)"
                                                  AssemblyFileMinorVersion="$(AssemblyMinorVersion)"
                                                  AssemblyFileBuildNumber="$(AssemblyBuildNumber)"
                                                  AssemblyFileRevision="$(AssemblyRevision)"/>
  </Target>

  <Target Name="Build">
    <CallTarget Targets="RestorePackages"/>
    <MSBuild Projects="@(SolutionToBuild)" ContinueOnError="false" Targets="Clean" />
    <MSBuild Projects="@(SolutionToBuild)" ContinueOnError="false" />
  </Target>

  <Target Name="PrepareOutput">
    <RemoveDir Directories="$(OutputFolder)"/>
    <CallTarget Targets="PrepareOutput_FxCop"/>
    <CallTarget Targets="PrepareOutput_StyleCop"/>
    <CallTarget Targets="PrepareOutput_Packages"/>
  </Target>

  <Target Name="PrepareOutput_FxCop">
    <MakeDir Directories="$(FxCopOutputFolder)"/>

    <ItemGroup>
      <AssembliesToScan Include="$(AllSolutionOutputInclude)" Exclude="$(AllSolutionOutputExclude)"/>
    </ItemGroup>

    <Copy SourceFiles="@(AssembliesToScan)" DestinationFolder="$(FxCopOutputFolder)"/>
  </Target>

  <Target Name="PrepareOutput_StyleCop">
    <MakeDir Directories="$(StyleCopOutputFolder)"/>
  </Target>

  <Target Name="PrepareOutput_Packages">
    <MakeDir Directories="$(PackageFolder)"/>
    <MakeDir Directories="$(PackageBinariesFolder)"/>
    <MakeDir Directories="$(PackageNugetFolder)"/>
  </Target>

  <Target Name="Tests">
    <ItemGroup>
      <TestAssemblies Include="$(TestsFolder)\**\bin\**\$(ProjectPrefixName)*.Tests.dll"/>
    </ItemGroup>

    <xunit Assemblies="@(TestAssemblies)" />
  </Target>

  <Target Name="StyleCop">
    <StyleCopTask
      ProjectFullPath="$(MSBuildProjectDirectory)"
      SourceFiles="@(StyleCopFiles)"
      AdditionalAddinPaths="@(StyleCopAdditionalAddinPaths)"
      ForceFullAnalysis="$(StyleCopForceFullAnalysis)"
      DefineConstants="$(DefineConstants)"
      TreatErrorsAsWarnings="$(StyleCopTreatErrorsAsWarnings)"
      CacheResults="$(StyleCopCacheResults)"
      OverrideSettingsFile="$(StyleCopOverrideSettingsFile)"
      OutputFile="$(StyleCopResultXml)"
      MaxViolationCount="$(StyleCopMaxViolationCount)">
      <Output TaskParameter="ViolationCount" PropertyName="StyleCopViolationCount" />
    </StyleCopTask>

    <Message Text="StyleCopResultXml = $(StyleCopResultXml)"/>
    <Message Text="StyleCopXslt = $(StyleCopXslt)"/>
    <Message Text="StyleCopResultHtml = $(StyleCopResultHtml)"/>

    <MSBuild.ExtensionPack.Xml.XmlTask Condition="Exists('$(StyleCopResultXml)')"
      TaskAction="Transform"
      OmitXmlDeclaration="true"
      XmlFile="$(StyleCopResultXml)"
      XslTransformFile="$(StyleCopXslt)"
      OutputFile="$(StyleCopResultHtml)">
    </MSBuild.ExtensionPack.Xml.XmlTask>

    <Error Condition="$(StyleCopViolationCount) > $(StyleCopMaxViolationCount)" Text="StyleCop found $(StyleCopViolationCount) broken rules!" />
    <Warning Condition="$(StyleCopViolationCount) > 0 And $(StyleCopMaxViolationCount) >= $(StyleCopViolationCount)" Text="StyleCop found $(StyleCopViolationCount) broken rules!"/>
  </Target>

  <Target Name="FxCop">
    <ItemGroup>
      <FxCopAssemblies Include="$(FxCopOutputFolder)/$(ProjectPrefixName)*.dll"/>
    </ItemGroup>

    <Exec Command="&quot;$(FxCopFolder)\FxCopCmd.exe&quot; @(FxCopAssemblies->'/file:&quot;%(Identity)&quot;', ' ') /searchgac /dictionary:&quot;$(FxCopCustomDictionary)&quot; /out:&quot;$(FxCopResultXml)&quot;" ContinueOnError="true" />

    <MSBuild.ExtensionPack.Xml.XmlTask Condition="Exists('$(FxCopResultXml)')"
      TaskAction="Transform"
      XmlFile="$(FxCopResultXml)"
      XslTransformFile="$(FxCopXsl)"
      OutputFile="$(FxCopResultHtml)">
    </MSBuild.ExtensionPack.Xml.XmlTask>
  </Target>

  <Target Name="Package">
    <CallTarget Targets="PackageBinaries"/>
    <CallTarget Targets="PackageBinariesWithDoc"/>
    <CallTarget Targets="PackageNuGet"/>
    <CallTarget Targets="PackageDocumentationWebsite"/>
    <CallTarget Targets="PackageWithSources"/>
  </Target>

  <Target Name="PackageBinaries">
    <ItemGroup>
      <FilesToPackage Include="$(AllSolutionOutputInclude)"
                      Exclude="$(AllSolutionOutputExclude)"/>
    </ItemGroup>

    <Copy SourceFiles="@(FilesToPackage)" DestinationFolder="$(PackageBinariesFolder)"/>
    <MSBuild.ExtensionPack.Compression.DNZip TaskAction="Create" CompressPath="$(PackageBinariesFolder)" ZipFileName="$(PackageBinariesZip)"/>
  </Target>

  <Target Name="PackageBinariesWithDoc">
    <MSBuild Projects="$(SHFBproj)" Properties="HelpFileFormat=HtmlHelp1;OutputPath=$(HtmlHelp1Output)" UseResultsCache="false"/>

    <ItemGroup>
      <ProjectDll Include="$(AllSolutionOutputInclude)"
               Exclude="$(AllSolutionOutputExclude)"/>
      <Chm Include="$(HtmlHelp1Output)\*.chm"/>
    </ItemGroup>

    <Copy SourceFiles="@(ProjectDll);@(Chm)" DestinationFolder="$(BinariesWithDocFolder)"/>
    <MSBuild.ExtensionPack.Compression.DNZip TaskAction="Create" CompressPath="$(BinariesWithDocFolder)" ZipFileName="$(BinariesWithDocZipFile)"/>
  </Target>

  <Target Name="PackageDocumentationWebsite">
    <ItemGroup>
      <ProjectFiles Include="$(AllSolutionProjects)" Exclude="$(AllSolutionTestProjects)">
        <Element>DocumentationSource</Element>
        <ParentElement>//DocumentationSources</ParentElement>
      </ProjectFiles>
    </ItemGroup>
    
    <MSBuild Projects="$(SHFBproj)" Properties="HelpFileFormat=Website;OutputPath=$(HtmlDocumentation)" UseResultsCache="false"/>
    <MSBuild.ExtensionPack.Compression.DNZip TaskAction="Create" CompressPath="$(HtmlDocumentation)" ZipFileName="$(HtmlDocumentationZipFile)"/>
  </Target>

  <Target Name="PackageNuGet">
    <ItemGroup>
      <NuSpecFiles Include="$(SourceFolder)\**\*.nuspec" Exclude="$(TestsFolder)\**\*.*;$(PackagesFolder)\**\*.*">
        <Dependencies>//dependencies/dependency[starts-with(@id, '$(ProjectPrefixName)')]</Dependencies>
      </NuSpecFiles>
      <ProjectFiles Include="$(AllSolutionProjects)" Exclude="$(AllSolutionTestProjects)"/>
    </ItemGroup>

    <MSBuild.ExtensionPack.Xml.XmlFile TaskAction="UpdateAttribute" File="%(NuSpecFiles.Identity)" XPath="%(NuSpecFiles.Dependencies)" Key="version" Value="$(Version)"/>

    <Exec Command="&quot;$(NuGetTool)&quot; pack &quot;%(ProjectFiles.Identity)&quot; -Prop Configuration=$(Configuration) -o &quot;$(PackageNugetFolder)&quot;" />
  </Target>

  <Target Name="PackageWithSources">
    <ItemGroup>
      <Sources Include="$(SourceFolder)\**"
               Exclude="$(SourceFolder)\**\*.vssscc;$(SourceFolder)\**\*.vspscc;$(SourceFolder)\**\*.user;$(SourceFolder)\*.suo;$(SourceFolder)\_ReSharper*\**\*;$(OutputFolder)\**;$(SourceFolder)\**\bin\**;$(SourceFolder)\**\obj\**;$(SourceFolder)\**\*.dotCover;$(SourceFolder)\**\*.docstates;$(PackagesFolder)\*\**"/>
      <Libs Include="$(LibFolder)\**"/>
      <Tools Include="$(ToolsFolder)\**"/>
    </ItemGroup>

    <Copy SourceFiles="@(Sources)" DestinationFiles="@(Sources->'$(ReleaseSourceFolder)\Source\%(RecursiveDir)%(Filename)%(Extension)')"/>
    <Copy SourceFiles="@(Libs)" DestinationFiles="@(Libs->'$(ReleaseSourceFolder)\Lib\%(RecursiveDir)%(Filename)%(Extension)')"/>
    <Copy SourceFiles="@(Tools)" DestinationFiles="@(Tools->'$(ReleaseSourceFolder)\Tools\%(RecursiveDir)%(Filename)%(Extension)')"/>
    <MSBuild.ExtensionPack.Compression.DNZip TaskAction="Create" CompressPath="$(ReleaseSourceFolder)" ZipFileName="$(SourcesZipFile)"/>
  </Target>

  <Target Name="NuGetPush">
    <ItemGroup>
      <NuGetPackageFiles Include="$(PackageNugetFolder)\*.*"/>
    </ItemGroup>
  
    <Exec Command="&quot;$(NuGetTool)&quot; push &quot;%(ProjectFiles.Identity)&quot; $(NuGetApiKey) -NonInteractive" />
  </Target>

  <Target Name="TeamCityArtifact">
    <Message Text="##teamcity[importData type='FxCop' path='$(FxCopResultXml)']"/>
    <Message Text="##teamcity[publishArtifacts '$(FxCopResultHtml)']"/>
    <Message Text="##teamcity[publishArtifacts '$(StyleCopResultHtml)']"/>

    <ItemGroup>
      <NuGetPackageFiles Include="$(PackageNugetFolder)\*.*"/>
    </ItemGroup>

    <Message Text="##teamcity[publishArtifacts '%(NuGetPackageFiles.Identity) => NuGet']"/>

    <Message Text="##teamcity[publishArtifacts '$(PackageBinariesZip) => CodePlex']"/>
    <Message Text="##teamcity[publishArtifacts '$(BinariesWithDocZipFile) => CodePlex']"/>
    <Message Text="##teamcity[publishArtifacts '$(SourcesZipFile) => CodePlex']"/>
    <Message Text="##teamcity[publishArtifacts '$(HtmlDocumentationZipFile) => HtmlDocumentation']"/>
  </Target>
</Project>
